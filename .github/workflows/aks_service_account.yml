# This is a basic workflow to help you get started with Actions

name: deploy_runner_aks

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Login via Azure CLI
      - name: 'Login via Azure CLI'
        uses:  azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      - name: 'Get key sp kubernetes'
        run: |
          echo CLIENT_SECRET_AKS=$(az keyvault secret show --vault-name troyskvweu001 --name aks-19-03-2023 --query  value) >> $GITHUB_ENV

      - uses: azure/setup-kubectl@v3
        name: Setup kubectl

      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        with:
            kubelogin-version: 'v0.0.26'

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
            resource-group: 'sandbox-rg'
            cluster-name: 'rbac-cluster'
            admin: 'false'
            use-kubelogin: 'true'
            
      - name: Run kubectl
        run: |
            kubectl get pods
